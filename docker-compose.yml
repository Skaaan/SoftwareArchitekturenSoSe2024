version: '3.8'

services:
  mysql:
    image: mysql:8
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: 1234
    ports:
      - "3307:3306"
    volumes:
      - mysql-data:/var/lib/mysql
      - ./mysql-initdb:/docker-entrypoint-initdb.d

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"

  keycloak:
    image: quay.io/keycloak/keycloak:25.0.0
    container_name: keycloak
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    entrypoint: ["/opt/keycloak/bin/kc.sh", "start-dev"]
    command: ["--spi-connections-jpa-default-keycloak-config-dir=/opt/keycloak/conf"]
    ports:
      - "8080:8080"
    volumes:
      - keycloak-data:/opt/keycloak/data
      - ./keycloak/conf:/opt/keycloak/conf

  service-discovery:
    build:
      context: ./service-discovery
      dockerfile: Dockerfile
    container_name: service-discovery
    ports:
      - "8761:8761"
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://service-discovery:8761/eureka/
      EUREKA_INSTANCE_PREFERIPADDRESS: "true"

  product-service:
    build:
      context: ./product-service
      dockerfile: Dockerfile
    container_name: product-service
    ports:
      - "8081:8081"
    depends_on:
      - mysql
      - rabbitmq
      - service-discovery
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/product_service
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: 1234
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://service-discovery:8761/eureka/
      SPRING_RABBITMQ_HOST: rabbitmq

  order-service:
    build:
      context: ./order-service
      dockerfile: Dockerfile
    container_name: order-service
    ports:
      - "8083:8083"
    depends_on:
      - mysql
      - rabbitmq
      - service-discovery
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/order_service
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: 1234
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://service-discovery:8761/eureka/
      SPRING_RABBITMQ_HOST: rabbitmq

  inventory-service:
    build:
      context: ./inventory-service
      dockerfile: Dockerfile
    container_name: inventory-service
    ports:
      - "8082:8082"
    depends_on:
      - mysql
      - rabbitmq
      - service-discovery
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/inventory_service
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: 1234
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://service-discovery:8761/eureka/
      SPRING_RABBITMQ_HOST: rabbitmq

  basket-service:
    build:
      context: ./basket-service
      dockerfile: Dockerfile
    container_name: basket-service
    ports:
      - "8084:8084"
    depends_on:
      - mysql
      - rabbitmq
      - service-discovery
      - keycloak
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/basket_service
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: 1234
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://service-discovery:8761/eureka/
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI: http://keycloak:8080/realms/bookStore
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI: http://keycloak:8080/realms/bookStore/protocol/openid-connect/certs

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: api-gateway
    ports:
      - "9001:9001"
    depends_on:
      - service-discovery
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://service-discovery:8761/eureka/
      SPRING_CLOUD_GATEWAY_ROUTES[0].ID: product-service
      SPRING_CLOUD_GATEWAY_ROUTES[0].URI: http://product-service:8081
      SPRING_CLOUD_GATEWAY_ROUTES[0].PREDICATES[0]: Path=/api/product/**
      SPRING_CLOUD_GATEWAY_ROUTES[1].ID: order-service
      SPRING_CLOUD_GATEWAY_ROUTES[1].URI: http://order-service:8083
      SPRING_CLOUD_GATEWAY_ROUTES[1].PREDICATES[0]: Path=/api/order/**
      SPRING_CLOUD_GATEWAY_ROUTES[2].ID: inventory-service
      SPRING_CLOUD_GATEWAY_ROUTES[2].URI: http://inventory-service:8082
      SPRING_CLOUD_GATEWAY_ROUTES[2].PREDICATES[0]: Path=/api/inventory/**
      SPRING_CLOUD_GATEWAY_ROUTES[3].ID: basket-service
      SPRING_CLOUD_GATEWAY_ROUTES[3].URI: http://basket-service:8084
      SPRING_CLOUD_GATEWAY_ROUTES[3].PREDICATES[0]: Path=/api/baskets/**

  notification-service:
    image: yasminehaidri/notification-service:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - service-discovery
      - rabbitmq

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "3000:3000"

volumes:
  mysql-data:
  keycloak-data:
