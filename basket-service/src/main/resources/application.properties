# Application name
spring.application.name=basket-service

# Server port
server.port=8084

# Eureka client configuration
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/
eureka.instance.prefer-ip-address=true
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

# mongodb datasource configuration
spring.data.mongodb.uri=mongodb://localhost:27017/basket_service
spring.jpa.hibernate.ddl-auto=create
spring.main.allow-bean-definition-overriding=true

# RabbitMQ configuration
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

# RabbitMQ custom properties
rabbitmq.exchange.name=order.exchange
rabbitmq.queue.basket=basket.queue
rabbitmq.queue.order=order.queue
rabbitmq.routing.key.basket=basketRoutingKey
rabbitmq.routing.key.order=orderRoutingKey

# Logging configuration
logging.level.org.springframework=INFO
logging.level.com.microservices=DEBUG

# CORS Configuration
spring.mvc.cors.allowed-origins=http://localhost:3000
spring.mvc.cors.allowed-methods=*
spring.mvc.cors.allowed-headers=*
spring.mvc.cors.allow-credentials=true

# Keycloak configuration
keycloak.realm=bookStore
keycloak.auth-server-url=http://localhost:8080/
keycloak.resource=react-client
keycloak.public-client=true
keycloak.use-resource-role-mappings=true

# Spring security configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/bookStore
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8080/realms/bookStore/protocol/openid-connect/certs
